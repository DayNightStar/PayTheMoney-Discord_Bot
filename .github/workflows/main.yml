name: Discord Bot CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    # 安裝依賴
    - name: Install dependencies
      run: npm ci
    
    # 運行測試
    - name: Run tests
      run: npm test
    
    # 設置 SSH 密鑰
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
    
    # 修改部署步驟
    - name: Deploy to EC2
      run: |
        # 創建臨時部署目錄
        mkdir deploy_temp
        
        # 使用更簡單的方式複製文件
        rsync -av \
          --exclude='node_modules' \
          --exclude='.git' \
          --exclude='deploy_temp' \
          --exclude='deploy.tar.gz' \
          . deploy_temp/
        
        # 進入臨時目錄打包
        cd deploy_temp
        tar -czf ../deploy.tar.gz .
        cd ..
        
        # 傳輸文件到 EC2
        scp deploy.tar.gz ubuntu@ec2-3-81-80-170.compute-1.amazonaws.com:~/discord-bot/
        
        # SSH 到 EC2 執行部署命令
        ssh ubuntu@ec2-3-81-80-170.compute-1.amazonaws.com '
          cd ~/discord-bot &&
          find . -mindepth 1 ! -name "node_modules" ! -name ".env" ! -name "deploy.tar.gz" -delete &&
          tar -xzf deploy.tar.gz &&
          rm deploy.tar.gz &&
          npm install &&
          pm2 restart discord-bot || pm2 start index.js --name "discord-bot"
        '
        
        # 清理臨時文件
        rm -rf deploy_temp deploy.tar.gz
